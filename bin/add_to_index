#!/usr/bin/env php
<?php
/* This program is free software. It comes without any warranty, to
 * the extent permitted by applicable law. You can redistribute it
 * and/or modify it under the terms of the Do What The Fuck You Want
 * To Public License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details. */

if($argc < 3) {
	echo 'Usage : '.$argv[0]." <basekey> <file> ...\n";
	die;
}

$outdir = '.';
$basekey = $argv[1];

$_SUBINDEXES = array();
$_FILES = array();
$_IGNORE = array(
        "had",
        "en",
        "own",
        "isn't",
        "via",
        "those",
        "he",
        "go",
        "net",
        "doesn't",
        "too",
        "www",
        "its",
        "per",
        "both",
        "our",
        "yes",
        "how",
        "their",
        "us",
        "was",
        "it's",
        "out",
        "very",
        "could",
        "than",
        "don't",
        "them",
        "any",
        "they",
        "has",
        "then",
        "your",
        "may",
        "does",
        "should",
        "do",
        "at",
        "there",
        "no",
        "so",
        "which",
        "but",
        "an",
        "by",
        "as",
        "or",
        "have",
        "with",
        "will",
        "you",
        "are",
        "can",
        "not",
        "if",
        "on",
        "we",
        "that",
        "from",
        "this",
        "be",
        "for",
        "in",
        "it",
        "and",
        "is",
        "of",
        "a",
        "to",
        "the",
);

for($i = 2; $i < $argc; ++$i) {
	$file = $argv[$i];
	$contents = file_get_contents($file);

	preg_match('/<title>(.+)<\/title>/sU', $contents, $title);

	$_FILES[$i]['uri'] = preg_replace('/^\.\//', '', $file);
	$_FILES[$i]['title'] = $title[1];

	$_I = 0;
	try {
		@$root = new SimpleXMLElement($contents);
		// Don't index the header, footer and menu.
		lookWords($i, $root->body->div->div[0]->div);
	} catch(Exception $exception) {
		trigger_error('Could not process '.$file, E_USER_WARNING);
	}
}

function lookWords($fileID, $element) {
	foreach($element->children() as $child) {
		lookWords($fileID, $child);
	}

	foreach($element->attributes() as $attr => $value) {
		if(!in_array($attr, array('title', 'alt', '')))
			continue;

		parseWords($fileID, (string)$element[$attr]);
	}

	$content = trim((string)$element);
	if($content != '') parseWords($fileID, $content);
}

function parseWords($fileID, $string) {
	global $_I, $_SUBINDEXES, $_IGNORE;
	$words = preg_split('/(\s+|@|\.|,|:|;|_|-|\/)/', $string, null, PREG_SPLIT_NO_EMPTY);
	foreach($words as $word) {
		// Remove any character that isn't usually part of a word.
		$word = strtolower(trim($word, ',.:;()[]"\'@+-/*%~#<>$?!_'));
		// Double quotes will break the XML and are not generally part of words.
		$word = str_replace('"', '', $word);

		if(!preg_match('/^[a-z]+[0-9a-z]*$/', $word)) continue;

		if(strlen($word) > 1 && !in_array($word, $_IGNORE)) {
			// We are assuming here that we parse the words in the right order,
			// this is almost the case and this is the only solution we have
			// for now.
			$_I++;
			$hash = md5($word);

			@$_SUBINDEXES[substr($hash, 0, 2)][$word][$fileID][] = $_I;
		}
	}
}

$indexindex = '<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<main_index>
<prefix value="2"/>
<header>
<title>Freenet new-wiki mirror index</title>
<owner>The guy who inserted the mirror.</owner>
</header>
<keywords>
';

for($i = 0; $i <= 0xFF; ++$i) {
	$j = str_pad(dechex($i), 2, '0', STR_PAD_LEFT);
	$indexindex .= '<subIndex key="'.$j.'"/>'."\n";
}

$indexindex .= '</keywords>
</main_index>
';

file_put_contents($outdir.'/index.xml', $indexindex);

for($i = 0; $i <= 0xFF; ++$i) {
	$j = str_pad(dechex($i), 2, '0', STR_PAD_LEFT);
	$keywords = '';
	$files = '';
	$usedFiles = array();

	foreach($_SUBINDEXES[$j] as $word => $array) {
		$keywords .= '<word v="'.$word.'">'."\n";

		foreach($array as $fileID => $wordPositions) {
			$usedFiles[$fileID] = true;
			$keywords .= '<file id="'.$fileID.'">'.implode(',', $wordPositions).'</file>'."\n";
		}

		$keywords .= '</word>'."\n";
	}

	foreach($usedFiles as $fileID => $true) {
		$files .= '<file id="'.$fileID.'" key="'.$basekey.$_FILES[$fileID]['uri'].'" title="'.$_FILES[$fileID]['title'].'"/>'."\n";
	}

	$subindex = '<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<sub_index>
<entries value="'.count($_SUBINDEXES[$j]).'"/>
<header>
<title>Freenet new-wiki mirror index</title>
</header>
<files>
'.$files.'</files>
<keywords>
'.$keywords.'</keywords>
</sub_index>
';

	file_put_contents($outdir.'/index_'.$j.'.xml', $subindex);
}
